{"version":3,"file":"static/development/pages/appstore.js","sources":["webpack:///./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js","webpack:///delegated ./node_modules/react/index.js from dll-reference dll_129a35c7ec57967eb265","webpack:///./pages/appstore.tsx","webpack:///./utils/app-stores.ts","webpack:///./utils/utils.ts","webpack:///external \"dll_129a35c7ec57967eb265\""],"sourcesContent":["\n    (window.__NEXT_P=window.__NEXT_P||[]).push([\"/appstore\", function() {\n      var mod = require(\"/Users/afshawnlotfi/Desktop/app.conva.website/pages/appstore.tsx\")\n      if(module.hot) {\n        module.hot.accept(\"/Users/afshawnlotfi/Desktop/app.conva.website/pages/appstore.tsx\", function() {\n          if(!next.router.components[\"/appstore\"]) return\n          var updatedPage = require(\"/Users/afshawnlotfi/Desktop/app.conva.website/pages/appstore.tsx\")\n          next.router.update(\"/appstore\", updatedPage)\n        })\n      }\n      return mod\n    }]);\n  ","module.exports = (__webpack_require__(/*! dll-reference dll_129a35c7ec57967eb265 */ \"dll-reference dll_129a35c7ec57967eb265\"))(\"./node_modules/react/index.js\");","import React, { useEffect } from \"react\";\nimport { AppStoreLink, GooglePlayLink } from \"../utils/app-stores\";\nimport { getMobileOperatingSystem } from \"../utils/utils\";\n\nexport interface AppStoreComponentProps {}\n\nconst AppStoreComponent = () => {\n  useEffect(() => {\n    // @ts-ignore\n    const md = getMobileOperatingSystem();\n    if (md === \"ios\") {\n      // @ts-ignore\n      window.location = AppStoreLink;\n    } else {\n      // @ts-ignore\n      window.location = GooglePlayLink;\n    }\n  }, []);\n\n  return <div />;\n};\nexport default AppStoreComponent;\n","export const AppStoreLink = \"https://apps.apple.com/us/app/conva/id1482978471\";\nexport const GooglePlayLink =\n  \"https://play.google.com/store/apps/details?id=app.conva.client\";\n","/**\n * Determine the mobile operating system.\n * This function returns one of 'iOS', 'Android', 'Windows Phone', or 'unknown'.\n *\n * @returns {String}\n */\nexport const getMobileOperatingSystem = (): \"android\" | \"ios\" | \"unknown\" => {\n  // @ts-ignore\n  const userAgent = navigator.userAgent || navigator.vendor || window.opera;\n\n  if (/android/i.test(userAgent)) {\n    return \"android\";\n  }\n\n  // iOS detection from: http://stackoverflow.com/a/9039885/177710\n  if (/iPad|iPhone|iPod/.test(userAgent)) {\n    return \"ios\";\n  }\n\n  return \"unknown\";\n};\n","module.exports = dll_129a35c7ec57967eb265;"],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACZA;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;;;;;;;;;;;;ACrBA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;ACDA;AAAA;AAAA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACpBA;;;;A","sourceRoot":""}